main: STRING
##
## Ends in an error in state: 0.
##
## main' -> . main [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TANTQUE TANTQUE
##
## Ends in an error in state: 2.
##
## instr_loop -> TANTQUE . expr AG bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## TANTQUE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME PLUS TANTQUE
##
## Ends in an error in state: 4.
##
## expr -> PLUS . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME PG TANTQUE
##
## Ends in an error in state: 5.
##
## expr -> PG . expr PD [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## PG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME PAS TANTQUE
##
## Ends in an error in state: 6.
##
## expr -> PAS . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## PAS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME MOINS TANTQUE
##
## Ends in an error in state: 7.
##
## expr -> MOINS . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## MOINS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME MOINS VAR VAR
##
## Ends in an error in state: 10.
##
## expr -> MOINS expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## MOINS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR MULT TANTQUE
##
## Ends in an error in state: 11.
##
## expr -> expr MULT . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr MULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR DIV TANTQUE
##
## Ends in an error in state: 13.
##
## expr -> expr DIV . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME PAS VAR VAR
##
## Ends in an error in state: 15.
##
## expr -> PAS expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## PAS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR PLUS TANTQUE
##
## Ends in an error in state: 16.
##
## expr -> expr PLUS . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR PLUS VAR VAR
##
## Ends in an error in state: 17.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr PLUS expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr PLUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR NEQ TANTQUE
##
## Ends in an error in state: 18.
##
## expr -> expr NEQ . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr NEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR NEQ VAR VAR
##
## Ends in an error in state: 19.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr NEQ expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr NEQ expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR MOINS TANTQUE
##
## Ends in an error in state: 20.
##
## expr -> expr MOINS . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr MOINS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR MOINS VAR VAR
##
## Ends in an error in state: 21.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr MOINS expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr MOINS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR LTE TANTQUE
##
## Ends in an error in state: 22.
##
## expr -> expr LTE . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr LTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR LTE VAR VAR
##
## Ends in an error in state: 23.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr LTE expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr LTE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR LT TANTQUE
##
## Ends in an error in state: 24.
##
## expr -> expr LT . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr LT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR LT VAR VAR
##
## Ends in an error in state: 25.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr LT expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr LT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR GTE TANTQUE
##
## Ends in an error in state: 26.
##
## expr -> expr GTE . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr GTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR GTE VAR VAR
##
## Ends in an error in state: 27.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr GTE expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr GTE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR GT TANTQUE
##
## Ends in an error in state: 28.
##
## expr -> expr GT . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR GT VAR VAR
##
## Ends in an error in state: 29.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr GT expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr GT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR EQ TANTQUE
##
## Ends in an error in state: 30.
##
## expr -> expr EQ . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR EQ VAR VAR
##
## Ends in an error in state: 31.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr EQ expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr EQ expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME PG VAR SINON
##
## Ends in an error in state: 32.
##
## expr -> PG expr . PD [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . NEQ expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . LTE expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . LT expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . GT expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . GTE expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . EQ expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . ET expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . OU expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . PLUS expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . MOINS expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . MULT expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . DIV expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
## expr -> expr . QUESTION expr COLON expr [ QUESTION PLUS PD OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ]
##
## The known suffix of the stack is as follows:
## PG expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR QUESTION TANTQUE
##
## Ends in an error in state: 33.
##
## expr -> expr QUESTION . expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr QUESTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR QUESTION VAR SINON
##
## Ends in an error in state: 34.
##
## expr -> expr . NEQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . LTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . LT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . GT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . GTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . EQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . ET expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . OU expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . PLUS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . MOINS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . MULT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . DIV expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr . QUESTION expr COLON expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV COLON ]
## expr -> expr QUESTION expr . COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr QUESTION expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR OU TANTQUE
##
## Ends in an error in state: 35.
##
## expr -> expr OU . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr OU
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR OU VAR VAR
##
## Ends in an error in state: 36.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr OU expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr OU expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR ET TANTQUE
##
## Ends in an error in state: 37.
##
## expr -> expr ET . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr ET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR ET VAR VAR
##
## Ends in an error in state: 38.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr ET expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr ET expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR QUESTION VAR COLON TANTQUE
##
## Ends in an error in state: 39.
##
## expr -> expr QUESTION expr COLON . expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr QUESTION expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR QUESTION VAR COLON VAR VAR
##
## Ends in an error in state: 40.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr QUESTION expr COLON expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## expr QUESTION expr COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME PLUS VAR VAR
##
## Ends in an error in state: 42.
##
## expr -> PLUS expr . [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS PD OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ EOF DIV COMMA COLON ALORS AG AD ]
##
## The known suffix of the stack is as follows:
## PLUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TANTQUE VAR SINON
##
## Ends in an error in state: 43.
##
## expr -> expr . NEQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . LTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . LT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . GT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . GTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . EQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . ET expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . OU expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . PLUS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . MOINS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . MULT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . DIV expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . QUESTION expr COLON expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## instr_loop -> TANTQUE expr . AG bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## TANTQUE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TANTQUE VAR AG STRING
##
## Ends in an error in state: 44.
##
## instr_loop -> TANTQUE expr AG . bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## TANTQUE expr AG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SOUSROUTINE TANTQUE
##
## Ends in an error in state: 45.
##
## instr -> SOUSROUTINE . var [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SOUSROUTINE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SI TANTQUE
##
## Ends in an error in state: 47.
##
## instr_cond -> SI . expr ALORS instr [ SINON SEMI EOF AD ]
## instr_cond -> SI . expr ALORS instr SINON instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SI VAR SINON
##
## Ends in an error in state: 48.
##
## expr -> expr . NEQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . LTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . LT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . GT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . GTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . EQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . ET expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . OU expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . PLUS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . MOINS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . MULT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . DIV expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . QUESTION expr COLON expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## instr_cond -> SI expr . ALORS instr [ SINON SEMI EOF AD ]
## instr_cond -> SI expr . ALORS instr SINON instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SI expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SI VAR ALORS STRING
##
## Ends in an error in state: 49.
##
## instr_cond -> SI expr ALORS . instr [ SINON SEMI EOF AD ]
## instr_cond -> SI expr ALORS . instr SINON instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SI expr ALORS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SAUF VAR
##
## Ends in an error in state: 50.
##
## instr_cond -> SAUF . SI expr ALORS instr [ SINON SEMI EOF AD ]
## instr_cond -> SAUF . SI expr ALORS instr SINON instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SAUF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SAUF SI TANTQUE
##
## Ends in an error in state: 51.
##
## instr_cond -> SAUF SI . expr ALORS instr [ SINON SEMI EOF AD ]
## instr_cond -> SAUF SI . expr ALORS instr SINON instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SAUF SI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SAUF SI VAR SINON
##
## Ends in an error in state: 52.
##
## expr -> expr . NEQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . LTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . LT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . GT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . GTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . EQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . ET expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . OU expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . PLUS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . MOINS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . MULT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . DIV expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## expr -> expr . QUESTION expr COLON expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV ALORS ]
## instr_cond -> SAUF SI expr . ALORS instr [ SINON SEMI EOF AD ]
## instr_cond -> SAUF SI expr . ALORS instr SINON instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SAUF SI expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SAUF SI VAR ALORS STRING
##
## Ends in an error in state: 53.
##
## instr_cond -> SAUF SI expr ALORS . instr [ SINON SEMI EOF AD ]
## instr_cond -> SAUF SI expr ALORS . instr SINON instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SAUF SI expr ALORS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: REM VAR
##
## Ends in an error in state: 55.
##
## instr -> REM . STRING [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## REM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: POUR TANTQUE
##
## Ends in an error in state: 57.
##
## instr_loop -> POUR . var DE expr JUSQUE expr AG bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## POUR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: POUR VAR VAR
##
## Ends in an error in state: 58.
##
## instr_loop -> POUR var . DE expr JUSQUE expr AG bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## POUR var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: POUR VAR DE TANTQUE
##
## Ends in an error in state: 59.
##
## instr_loop -> POUR var DE . expr JUSQUE expr AG bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## POUR var DE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: POUR VAR DE VAR SINON
##
## Ends in an error in state: 60.
##
## expr -> expr . NEQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . LTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . LT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . GT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . GTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . EQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . ET expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . OU expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . PLUS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . MOINS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . MULT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . DIV expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## expr -> expr . QUESTION expr COLON expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT JUSQUE GTE GT ET EQ DIV ]
## instr_loop -> POUR var DE expr . JUSQUE expr AG bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## POUR var DE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: POUR VAR DE VAR JUSQUE TANTQUE
##
## Ends in an error in state: 61.
##
## instr_loop -> POUR var DE expr JUSQUE . expr AG bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## POUR var DE expr JUSQUE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: POUR VAR DE VAR JUSQUE VAR SINON
##
## Ends in an error in state: 62.
##
## expr -> expr . NEQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . LTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . LT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . GT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . GTE expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . EQ expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . ET expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . OU expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . PLUS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . MOINS expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . MULT expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . DIV expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## expr -> expr . QUESTION expr COLON expr [ QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ DIV AG ]
## instr_loop -> POUR var DE expr JUSQUE expr . AG bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## POUR var DE expr JUSQUE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: POUR VAR DE VAR JUSQUE VAR AG STRING
##
## Ends in an error in state: 63.
##
## instr_loop -> POUR var DE expr JUSQUE expr AG . bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## POUR var DE expr JUSQUE expr AG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME TANTQUE
##
## Ends in an error in state: 64.
##
## instr -> IMPRIME . separated_nonempty_list(COMMA,expr) [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## IMPRIME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR PD
##
## Ends in an error in state: 66.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV COMMA AD ]
## separated_nonempty_list(COMMA,expr) -> expr . [ SINON SEMI EOF AD ]
## separated_nonempty_list(COMMA,expr) -> expr . COMMA separated_nonempty_list(COMMA,expr) [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IMPRIME VAR COMMA TANTQUE
##
## Ends in an error in state: 67.
##
## separated_nonempty_list(COMMA,expr) -> expr COMMA . separated_nonempty_list(COMMA,expr) [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: ENTREE TANTQUE
##
## Ends in an error in state: 70.
##
## instr -> ENTREE . separated_nonempty_list(COMMA,var) [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## ENTREE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: ENTREE VAR VAR
##
## Ends in an error in state: 71.
##
## separated_nonempty_list(COMMA,var) -> var . [ SINON SEMI EQ EOF AD ]
## separated_nonempty_list(COMMA,var) -> var . COMMA separated_nonempty_list(COMMA,var) [ SINON SEMI EQ EOF AD ]
##
## The known suffix of the stack is as follows:
## var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR COMMA TANTQUE
##
## Ends in an error in state: 72.
##
## separated_nonempty_list(COMMA,var) -> var COMMA . separated_nonempty_list(COMMA,var) [ SINON SEMI EQ EOF AD ]
##
## The known suffix of the stack is as follows:
## var COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: DEF TANTQUE
##
## Ends in an error in state: 75.
##
## instr -> DEF . var AG bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## DEF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: DEF VAR VAR
##
## Ends in an error in state: 76.
##
## instr -> DEF var . AG bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## DEF var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: DEF VAR AG STRING
##
## Ends in an error in state: 77.
##
## instr -> DEF var AG . bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## DEF var AG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: AG STRING
##
## Ends in an error in state: 78.
##
## instr -> AG . bloc AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## AG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR VAR
##
## Ends in an error in state: 79.
##
## instr_assign -> var . PLUS EQ expr [ SINON SEMI EOF AD ]
## instr_assign -> var . MOINS EQ expr [ SINON SEMI EOF AD ]
## instr_assign -> var . MULT EQ expr [ SINON SEMI EOF AD ]
## instr_assign -> var . DIV EQ expr [ SINON SEMI EOF AD ]
## separated_nonempty_list(COMMA,var) -> var . [ EQ ]
## separated_nonempty_list(COMMA,var) -> var . COMMA separated_nonempty_list(COMMA,var) [ EQ ]
##
## The known suffix of the stack is as follows:
## var
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR PLUS VAR
##
## Ends in an error in state: 80.
##
## instr_assign -> var PLUS . EQ expr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR PLUS EQ TANTQUE
##
## Ends in an error in state: 81.
##
## instr_assign -> var PLUS EQ . expr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var PLUS EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR PLUS EQ VAR PD
##
## Ends in an error in state: 82.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## instr_assign -> var PLUS EQ expr . [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var PLUS EQ expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MULT VAR
##
## Ends in an error in state: 83.
##
## instr_assign -> var MULT . EQ expr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var MULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MULT EQ TANTQUE
##
## Ends in an error in state: 84.
##
## instr_assign -> var MULT EQ . expr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var MULT EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MULT EQ VAR PD
##
## Ends in an error in state: 85.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## instr_assign -> var MULT EQ expr . [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var MULT EQ expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MOINS VAR
##
## Ends in an error in state: 86.
##
## instr_assign -> var MOINS . EQ expr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var MOINS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MOINS EQ TANTQUE
##
## Ends in an error in state: 87.
##
## instr_assign -> var MOINS EQ . expr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var MOINS EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MOINS EQ VAR PD
##
## Ends in an error in state: 88.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## instr_assign -> var MOINS EQ expr . [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var MOINS EQ expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR DIV VAR
##
## Ends in an error in state: 89.
##
## instr_assign -> var DIV . EQ expr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR DIV EQ TANTQUE
##
## Ends in an error in state: 90.
##
## instr_assign -> var DIV EQ . expr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var DIV EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR DIV EQ VAR PD
##
## Ends in an error in state: 91.
##
## expr -> expr . NEQ expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . LTE expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . LT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . GT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . GTE expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . EQ expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . ET expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . OU expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . PLUS expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . MOINS expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . MULT expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . DIV expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## expr -> expr . QUESTION expr COLON expr [ SINON SEMI QUESTION PLUS OU NEQ MULT MOINS LTE LT GTE GT ET EQ EOF DIV AD ]
## instr_assign -> var DIV EQ expr . [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## var DIV EQ expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR COMMA VAR SINON
##
## Ends in an error in state: 93.
##
## instr_assign -> separated_nonempty_list(COMMA,var) . EQ separated_nonempty_list(COMMA,expr) [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## separated_nonempty_list(COMMA,var)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 71, spurious reduction of production separated_nonempty_list(COMMA,var) -> var
## In state 73, spurious reduction of production separated_nonempty_list(COMMA,var) -> var COMMA separated_nonempty_list(COMMA,var)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR EQ TANTQUE
##
## Ends in an error in state: 94.
##
## instr_assign -> separated_nonempty_list(COMMA,var) EQ . separated_nonempty_list(COMMA,expr) [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## separated_nonempty_list(COMMA,var) EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: FIN SINON
##
## Ends in an error in state: 100.
##
## separated_nonempty_list(SEMI,instr) -> instr . [ EOF AD ]
## separated_nonempty_list(SEMI,instr) -> instr . SEMI separated_nonempty_list(SEMI,instr) [ EOF AD ]
##
## The known suffix of the stack is as follows:
## instr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: FIN SEMI STRING
##
## Ends in an error in state: 101.
##
## separated_nonempty_list(SEMI,instr) -> instr SEMI . separated_nonempty_list(SEMI,instr) [ EOF AD ]
##
## The known suffix of the stack is as follows:
## instr SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: AG FIN EOF
##
## Ends in an error in state: 103.
##
## instr -> AG bloc . AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## AG bloc
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production separated_nonempty_list(SEMI,instr) -> instr
## In state 92, spurious reduction of production loption(separated_nonempty_list(SEMI,instr)) -> separated_nonempty_list(SEMI,instr)
## In state 96, spurious reduction of production bloc -> loption(separated_nonempty_list(SEMI,instr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: DEF VAR AG FIN EOF
##
## Ends in an error in state: 105.
##
## instr -> DEF var AG bloc . AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## DEF var AG bloc
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production separated_nonempty_list(SEMI,instr) -> instr
## In state 92, spurious reduction of production loption(separated_nonempty_list(SEMI,instr)) -> separated_nonempty_list(SEMI,instr)
## In state 96, spurious reduction of production bloc -> loption(separated_nonempty_list(SEMI,instr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: POUR VAR DE VAR JUSQUE VAR AG FIN EOF
##
## Ends in an error in state: 107.
##
## instr_loop -> POUR var DE expr JUSQUE expr AG bloc . AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## POUR var DE expr JUSQUE expr AG bloc
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production separated_nonempty_list(SEMI,instr) -> instr
## In state 92, spurious reduction of production loption(separated_nonempty_list(SEMI,instr)) -> separated_nonempty_list(SEMI,instr)
## In state 96, spurious reduction of production bloc -> loption(separated_nonempty_list(SEMI,instr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SAUF SI VAR ALORS FIN VAR
##
## Ends in an error in state: 109.
##
## instr_cond -> SAUF SI expr ALORS instr . [ SINON SEMI EOF AD ]
## instr_cond -> SAUF SI expr ALORS instr . SINON instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SAUF SI expr ALORS instr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SAUF SI VAR ALORS FIN SINON STRING
##
## Ends in an error in state: 110.
##
## instr_cond -> SAUF SI expr ALORS instr SINON . instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SAUF SI expr ALORS instr SINON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SI VAR ALORS FIN VAR
##
## Ends in an error in state: 112.
##
## instr_cond -> SI expr ALORS instr . [ SINON SEMI EOF AD ]
## instr_cond -> SI expr ALORS instr . SINON instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SI expr ALORS instr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: SI VAR ALORS FIN SINON STRING
##
## Ends in an error in state: 113.
##
## instr_cond -> SI expr ALORS instr SINON . instr [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## SI expr ALORS instr SINON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TANTQUE VAR AG FIN EOF
##
## Ends in an error in state: 115.
##
## instr_loop -> TANTQUE expr AG bloc . AD [ SINON SEMI EOF AD ]
##
## The known suffix of the stack is as follows:
## TANTQUE expr AG bloc
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production separated_nonempty_list(SEMI,instr) -> instr
## In state 92, spurious reduction of production loption(separated_nonempty_list(SEMI,instr)) -> separated_nonempty_list(SEMI,instr)
## In state 96, spurious reduction of production bloc -> loption(separated_nonempty_list(SEMI,instr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main: FIN AD
##
## Ends in an error in state: 117.
##
## main -> programme . EOF [ # ]
##
## The known suffix of the stack is as follows:
## programme
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 100, spurious reduction of production separated_nonempty_list(SEMI,instr) -> instr
## In state 92, spurious reduction of production loption(separated_nonempty_list(SEMI,instr)) -> separated_nonempty_list(SEMI,instr)
## In state 96, spurious reduction of production bloc -> loption(separated_nonempty_list(SEMI,instr))
## In state 120, spurious reduction of production programme -> bloc
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main_ligne: STRING
##
## Ends in an error in state: 121.
##
## main_ligne' -> . main_ligne [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

main_ligne: FIN SEMI
##
## Ends in an error in state: 123.
##
## main_ligne -> instr . EOF [ # ]
##
## The known suffix of the stack is as follows:
## instr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

